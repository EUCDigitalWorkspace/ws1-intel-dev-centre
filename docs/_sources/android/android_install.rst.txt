:orphan:

.. _install_android:

Installing the Android SDK
--------------------------

Installing via Gradle
^^^^^^^^^^^^^^^^^^^^^
In the ``build.gradle`` file living in the ``projectname/app`` directory, add
the Workspace ONE Intelligence repository information in ``repositories{...}``

.. raw:: html

   <ul style="margin: 10px 0px 0px; list-style-type: disc; caret-color: rgb(23, 43, 77); color: rgb(23, 43, 77); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 14px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none; text-align: left;">
      <li>Download the .aar from <a href="https://vdc-download.vmware.com/vmwb-repository/dcr-public/5b0824b6-3146-48c2-a3e0-7af88ab2e9ee/9996ab08-2e94-4d31-a233-a0b52a8a0ea6/com/vmware/ws1/WS1IntelligenceSDK/24.1.0/WS1IntelligenceSDK-24.1.0-20240213.231417-5.aar" rel="nofollow" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">HERE</a></li>
      <li>Add it to the libs directory. NOTE - libs  directory should ideally be under the app  directory.</li>
      <li>Pull the IntelSDK dependency like below</li>
   </ul>

.. code-block:: groovy

    implementation files('libs/WS1IntelligenceSDK-24.1.0-20240213.231417-5.aar')

Be sure to sync your project with your gradle files after you add this!

.. _permissions_required:

Permissions Required
--------------------

Add the following permissions to your app's ``AndroidManifest.xml`` file.

``INTERNET``
    **Required**. Used to report data to Workspace ONE Intelligence.

``ACCESS_NETWORK_STATE``
    **Optional**. Allows providing network connectivity information such
    as *carrier* and network type.

For more information on these permissions, refer to the
`Android Manifest documentation <http://developer.android.com/reference/android/Manifest.permission.html>`_

Permissions Needed for IntelligenceSDK Features
-----------------------------------------------

.. note::

   These permissions are  optional. If they are not given, the corresponding attributes will not be computed.

The IntelligenceSDK currently utilizes the following Android Permissions:

.. raw:: html

   <ul style="margin: 10px 0px 0px; list-style-type: disc; caret-color: rgb(23, 43, 77); color: rgb(23, 43, 77); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 14px; font-style: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: none; text-align: left;">
      <li><a href="https://developer.android.com/reference/android/Manifest.permission#ACCESS_FINE_LOCATION" rel="nofollow" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">ACCESS_FINE_LOCATION</a></li>
      <li><a href="https://developer.android.com/reference/android/Manifest.permission#ACCESS_NETWORK_STATE" rel="nofollow" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">ACCESS_NETWORK_STATE</a></li>
      <li><a href="https://developer.android.com/reference/android/Manifest.permission#ACCESS_WIFI_STATE" rel="nofollow" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">ACCESS_WIFI_STATE</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#BLUETOOTH" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">BLUETOOTH</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#BLUETOOTH_CONNECT" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">BLUETOOTH_CONNECT</a></li>
      <li><a class="external-link" href="https://developer.android.com/reference/android/Manifest.permission#CHANGE_NETWORK_STATE" rel="nofollow" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">CHANGE_NETWORK_STATE</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#INTERNET" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">INTERNET</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">READ_EXTERNAL_STORAGE</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#READ_PHONE_STATE" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">READ_PHONE_STATE</a></li>
      <li><a rel="nofollow" href="https://developer.android.com/reference/android/Manifest.permission#USE_BIOMETRIC" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">USE_BIOMETRIC</a></li>
      <li><a href="https://developer.android.com/reference/android/Manifest.permission#WRITE_EXTERNAL_STORAGE" rel="nofollow" class="external-link" style="color: rgb(0, 105, 144); text-decoration-style: ; text-decoration-color: ; text-decoration: var(--aui-link-decoration);">WRITE_EXTERNAL_STORAGE</a></li>
   </ul>

============================= =======================================
Attribute                     Permissions (Specific SDKs)
============================= =======================================
biometric_capabilities        USE_BIOMETRIC
----------------------------- ---------------------------------------
biometric_credential_enrolled USE_BIOMETRIC
----------------------------- ---------------------------------------
bluetooth_connected           BLUETOOTH, BLUETOOTH_CONNECT (SDK 31+)
----------------------------- ---------------------------------------
bssid                         ACCESS_WIFI_STATE, 
                              ACCESS_FINE_LOCATION,
                              ACCESS_COARSE_LOCATION, 
                              CHANGE_NETWORK_STATE (SDK 31+)
----------------------------- ---------------------------------------
internet_available            ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
ip_address                    ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
jitter                        ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
latency                       ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
mobile_network_type           READ_PHONE_STATE
----------------------------- ---------------------------------------
network_connectivity_type     ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
network_interface_change      ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
ssid                          ACCESS_WIFI_STATE, 
                              ACCESS_FINE_LOCATION,
                              ACCESS_COARSE_LOCATION, 
                              CHANGE_NETWORK_STATE (SDK 31+)
----------------------------- ---------------------------------------
vpn_connected                 ACCESS_NETWORK_STATE
----------------------------- ---------------------------------------
wifi_enablement               ACCESS_WIFI_STATE
----------------------------- ---------------------------------------
wifi_frequency                ACCESS_WIFI_STATE (SDK < 31), 
                              ACCESS_FINE_LOCATION (SDK < 31), 
                              ACCESS_COARSE_LOCATION (SDK < 31), 
                              CHANGE_NETWORK_STATE (31+)
----------------------------- ---------------------------------------
wifi_signal_strength          ACCESS_NETWORK_STATE, 
                              ACCESS_FINE_LOCATION(SDK < 30), 
                              ACCESS_COARSE_LOCATION(SDK < 30)
============================= =======================================

For more information on Android Permissions, please refer to the following `Google Documentation <https://developer.android.com/guide/topics/permissions/overview/>`_

.. _initialize_android:

Initializing Workspace ONE Intelligence SDK
-------------------------------------------

The following initialization instructions are the same for both the standard
(sdkonly) SDK and the NDK-enabled SDK.

Obtain your app ID from Workspace ONE Intelligence console.

1. To initialize Workspace ONE Intelligence SDK add the following code at the
   beginning of the ``onCreate()`` of your main Activity:


.. code-block:: java

   Crittercism.initialize(getApplicationContext(), "CRITTERCISM_APP_ID");

.. note::

   Workspace ONE Intelligence SDK should be initialized once on the main thread
   as early as possible.
   Hence, if you subclass the Application singleton, you should initialize
   Workspace ONE Intelligence SDK in the ``onCreate()`` of that Application
   subclass using the same code, instead of the main activity.
   App loads will be sent from the first visible activity; they will not
   be sent from background services and BroadcastReceivers.

.. note::

   Your main Activity is the one with ``android.intent.action.MAIN`` intent
   filter in your AndroidManifest.

Or initialize Workspace ONE Intelligence SDK with a CrittercismConfig argument

.. code-block:: java

   CrittercismConfig config = new CrittercismConfig();
   config.setAllowsCellularAccess(false);
   Crittercism.initialize(context, "CRITTERCISM_APP_ID", config);


2. You may need to add the following import, if Android Studio has not
   automatically added it already:

.. code-block:: java

   import com.crittercism.app.Crittercism;

Your Android app is now integrated with Workspace ONE Intelligence and you can
go ahead and build it. Additional features require adding more code to your
project.


.. _symbolicate_android:

Configuring Proguard Symbolication
----------------------------------

.. include:: ../shared/symbolicate_include.txt

.. note::

   Follow the instructions in this section only if your app obfuscates with `Android Proguard <http://developer.android.com/tools/help/proguard.html>`_.
   Otherwise, skip this section.

For Android applications, developers have the option to obfuscate their function
names using the ProGuard tool in order to reduce app size and to prevent others
from reverse engineering the app source. In order to replace the obfuscated name
with a human-readable name, developers use a Proguard mapping file.

Setting Up ProGuard
^^^^^^^^^^^^^^^^^^^

1. Add the following lines to your project's ``proguard.cfg`` file:

.. code-block:: html

   -dontwarn com.crittercism.**
   -keep public class com.crittercism.**
   -keepclassmembers public class com.crittercism.**
   {
       *;
   }

2. To get line number information, make sure that you keep the file names and
   line numbers in your ProGuard ``.cfg`` settings file.

.. code-block:: java

   -keepattributes SourceFile, LineNumberTable

This information will be visible in all stacktraces, however - even those that
are not symbolicated.

To have your crashes automatically deobfuscated and grouped,
you must upload a ``mapping.txt`` file on to the Settings tab of your App.

.. todo **Reviewers:** Add screen shot here.

Each ``mapping.txt`` file you upload is associated with a version of your app.
We deobfuscated crashes for only one version with each mapping.txt file.

.. note::

   Be careful to upload the right file for your version!

..  note::

    If you set a customized app version name in the ``CrittercismConfig``
    instance, you should use that string and not the manifest string in
    ``app-version-name``. Also, if you choose to include the app version code in
    the app version, that should also be included in ``app-version-name``.

..  note::

    At this point, you have enabled Workspace ONE Intelligence SDK to receive
    Application Performance Information from your application

